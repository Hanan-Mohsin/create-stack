# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
# Use a package of configuration called an orb.
orbs:
  # Declare a dependency on the welcome-orb
  welcome: circleci/welcome-orb@0.4.1
  aws-cli: circleci/aws-cli@3.1.4
# Orchestrate or schedule a set of jobs
commands:
  print_pipeline_id:
    description: "Print the circle workflow id"
    parameters:
      circle_id:
        type: string
    steps:
      - run: echo << parameters.circle_id >>

  destroy_environment:
    steps:
      - run:
          name: Destroy environment
          # ${CIRCLE_WORKFLOW_ID} is a Built-in environment variable 
          # ${CIRCLE_WORKFLOW_ID:0:5} takes the first 5 chars of the variable CIRCLE_CI_WORKFLOW_ID 
          when: on_fail
          command: |
            aws cloudformation delete-stack --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:7}
jobs:
  create_infrastructure: 
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - aws-cli/setup:
          aws-access-key-id: ACCESS_KEY
          aws-secret-access-key: SECRET_KEY
          aws-region: REGION
      - run:
          name: Create Cloudformation Stack
          command: aws cloudformation deploy --template-file template.yml --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5} --region us-east-1

  # Exercise: Config and Deployment
  configure_infrastructure: 
    docker:
      - image: python:3.10-alpine
    steps:
      - checkout
      - add_ssh_keys:
              fingerprints: ["dd:a0:f5:2c:b6:9f:ea:ff:0c:98:58:82:43:6b:88:31"] 
      - run:
          name: Install Ansible
          command: apk add --update ansible
      - run:
          name: Ansible version
          command: ansible --version
      - run:
          name: Run Playbook and Configure server
          command: ansible-playbook -i inventory.txt main.yml

  smoke_test:
    docker:
      - image: amazon/aws-cli
    steps:
      - run:
          name: Test job
          command:  return 1
      - destroy_environment

  
      
      



  
  
workflows:
  # Name the workflow "welcome"
  welcome:
    # Run the welcome/run job in its own container
    jobs:
      - create_infrastructure
      - smoke_test:
          requires:
              - create_infrastructure
    